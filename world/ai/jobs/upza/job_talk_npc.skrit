Go		m_Go$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;
Goid	m_Target$;

string red_convo$;
		
#include "k_job_c_mcp_fidget_utils" 

property    string  red_convo$  = "conversation_red"   doc = "Conversation during turn_world_red";


startup state STARTUP$
{
}

event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Talk$;

}

state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}

	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
		if( m_Go$.Mind.ActorAutoFidgets )
		{
			StartFidgetIfRequired$();
		}
	}

	event OnEnterState$
	{
		if( GameAuditor.GetDb.GetBool( "turn_world_red" ) )
		{
			m_Go$.Conversation.RSSelectConversation( red_convo$ );
		}

		m_Go$.Conversation.RSActivateDialogue();

		if( m_Go$.Mind.ActorAutoFidgets )
		{
			StartFidgetIfRequired$();
		}
	}
}

state Exiting$
{
	event OnEnterState$
	{
		m_Job$.MarkForDeletion();
	}
}
